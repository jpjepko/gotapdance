// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clientconf.proto

package tdproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeploymentConfig struct {
	DecoyList                *DecoyList          `protobuf:"bytes,1,opt,name=decoy_list,json=decoyList" json:"decoy_list,omitempty"`
	Generation               *uint32             `protobuf:"varint,2,opt,name=generation" json:"generation,omitempty"`
	DefaultPubkey            *PubKey             `protobuf:"bytes,3,opt,name=default_pubkey,json=defaultPubkey" json:"default_pubkey,omitempty"`
	PhantomSubnetsList       *PhantomSubnetsList `protobuf:"bytes,4,opt,name=phantom_subnets_list,json=phantomSubnetsList" json:"phantom_subnets_list,omitempty"`
	ConjurePubkey            *PubKey             `protobuf:"bytes,5,opt,name=conjure_pubkey,json=conjurePubkey" json:"conjure_pubkey,omitempty"`
	VersionNumber            *uint32             `protobuf:"varint,6,opt,name=version_number,json=versionNumber" json:"version_number,omitempty"`
	SuportedTransports       []TransportType     `protobuf:"varint,7,rep,name=suported_transports,json=suportedTransports,enum=tapdance.TransportType" json:"suported_transports,omitempty"`
	Supported_APIRegistrar   *Registrar          `protobuf:"bytes,8,opt,name=supported_API_registrar,json=supportedAPIRegistrar" json:"supported_API_registrar,omitempty"`
	SupportedDecoyRegistrar  *Registrar          `protobuf:"bytes,9,opt,name=supported_decoy_registrar,json=supportedDecoyRegistrar" json:"supported_decoy_registrar,omitempty"`
	SupportedOtherRegistrars []*Registrar        `protobuf:"bytes,10,rep,name=supported_other_registrars,json=supportedOtherRegistrars" json:"supported_other_registrars,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}            `json:"-"`
	XXX_unrecognized         []byte              `json:"-"`
	XXX_sizecache            int32               `json:"-"`
}

func (m *DeploymentConfig) Reset()         { *m = DeploymentConfig{} }
func (m *DeploymentConfig) String() string { return proto.CompactTextString(m) }
func (*DeploymentConfig) ProtoMessage()    {}
func (*DeploymentConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_71001a4fd38c49df, []int{0}
}

func (m *DeploymentConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentConfig.Unmarshal(m, b)
}
func (m *DeploymentConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentConfig.Marshal(b, m, deterministic)
}
func (m *DeploymentConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentConfig.Merge(m, src)
}
func (m *DeploymentConfig) XXX_Size() int {
	return xxx_messageInfo_DeploymentConfig.Size(m)
}
func (m *DeploymentConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentConfig proto.InternalMessageInfo

func (m *DeploymentConfig) GetDecoyList() *DecoyList {
	if m != nil {
		return m.DecoyList
	}
	return nil
}

func (m *DeploymentConfig) GetGeneration() uint32 {
	if m != nil && m.Generation != nil {
		return *m.Generation
	}
	return 0
}

func (m *DeploymentConfig) GetDefaultPubkey() *PubKey {
	if m != nil {
		return m.DefaultPubkey
	}
	return nil
}

func (m *DeploymentConfig) GetPhantomSubnetsList() *PhantomSubnetsList {
	if m != nil {
		return m.PhantomSubnetsList
	}
	return nil
}

func (m *DeploymentConfig) GetConjurePubkey() *PubKey {
	if m != nil {
		return m.ConjurePubkey
	}
	return nil
}

func (m *DeploymentConfig) GetVersionNumber() uint32 {
	if m != nil && m.VersionNumber != nil {
		return *m.VersionNumber
	}
	return 0
}

func (m *DeploymentConfig) GetSuportedTransports() []TransportType {
	if m != nil {
		return m.SuportedTransports
	}
	return nil
}

func (m *DeploymentConfig) GetSupported_APIRegistrar() *Registrar {
	if m != nil {
		return m.Supported_APIRegistrar
	}
	return nil
}

func (m *DeploymentConfig) GetSupportedDecoyRegistrar() *Registrar {
	if m != nil {
		return m.SupportedDecoyRegistrar
	}
	return nil
}

func (m *DeploymentConfig) GetSupportedOtherRegistrars() []*Registrar {
	if m != nil {
		return m.SupportedOtherRegistrars
	}
	return nil
}

type ClientConfig2 struct {
	VersionNumber        *uint32             `protobuf:"varint,1,opt,name=version_number,json=versionNumber" json:"version_number,omitempty"`
	DeploymentConfigs    []*DeploymentConfig `protobuf:"bytes,2,rep,name=deployment_configs,json=deploymentConfigs" json:"deployment_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClientConfig2) Reset()         { *m = ClientConfig2{} }
func (m *ClientConfig2) String() string { return proto.CompactTextString(m) }
func (*ClientConfig2) ProtoMessage()    {}
func (*ClientConfig2) Descriptor() ([]byte, []int) {
	return fileDescriptor_71001a4fd38c49df, []int{1}
}

func (m *ClientConfig2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfig2.Unmarshal(m, b)
}
func (m *ClientConfig2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfig2.Marshal(b, m, deterministic)
}
func (m *ClientConfig2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfig2.Merge(m, src)
}
func (m *ClientConfig2) XXX_Size() int {
	return xxx_messageInfo_ClientConfig2.Size(m)
}
func (m *ClientConfig2) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfig2.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfig2 proto.InternalMessageInfo

func (m *ClientConfig2) GetVersionNumber() uint32 {
	if m != nil && m.VersionNumber != nil {
		return *m.VersionNumber
	}
	return 0
}

func (m *ClientConfig2) GetDeploymentConfigs() []*DeploymentConfig {
	if m != nil {
		return m.DeploymentConfigs
	}
	return nil
}

type Registrar struct {
	Url                  *string  `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Registrar) Reset()         { *m = Registrar{} }
func (m *Registrar) String() string { return proto.CompactTextString(m) }
func (*Registrar) ProtoMessage()    {}
func (*Registrar) Descriptor() ([]byte, []int) {
	return fileDescriptor_71001a4fd38c49df, []int{2}
}

func (m *Registrar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Registrar.Unmarshal(m, b)
}
func (m *Registrar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Registrar.Marshal(b, m, deterministic)
}
func (m *Registrar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Registrar.Merge(m, src)
}
func (m *Registrar) XXX_Size() int {
	return xxx_messageInfo_Registrar.Size(m)
}
func (m *Registrar) XXX_DiscardUnknown() {
	xxx_messageInfo_Registrar.DiscardUnknown(m)
}

var xxx_messageInfo_Registrar proto.InternalMessageInfo

func (m *Registrar) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*DeploymentConfig)(nil), "tapdance.DeploymentConfig")
	proto.RegisterType((*ClientConfig2)(nil), "tapdance.ClientConfig2")
	proto.RegisterType((*Registrar)(nil), "tapdance.Registrar")
}

func init() { proto.RegisterFile("clientconf.proto", fileDescriptor_71001a4fd38c49df) }

var fileDescriptor_71001a4fd38c49df = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcb, 0x6f, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0x86, 0xd2, 0x7a, 0x50, 0x22, 0xb3, 0x05, 0x75, 0x89, 0x00, 0x45, 0x91, 0x90,
	0x72, 0xca, 0x21, 0x17, 0xce, 0xa5, 0x3d, 0x10, 0x15, 0xb5, 0xc1, 0xf4, 0xc4, 0xc5, 0xf2, 0x63,
	0xe2, 0x2e, 0x38, 0xbb, 0xab, 0x7d, 0x20, 0xf9, 0xc8, 0x95, 0xbf, 0x1a, 0x79, 0xfd, 0xd8, 0x50,
	0x92, 0xdb, 0xea, 0x9b, 0xf9, 0x7e, 0xfe, 0x76, 0x67, 0x0c, 0x51, 0x5e, 0x31, 0xe4, 0x26, 0x17,
	0x7c, 0xbb, 0x94, 0x4a, 0x18, 0x41, 0xce, 0x4d, 0x2a, 0x8b, 0x94, 0xe7, 0x38, 0x8d, 0x34, 0x2b,
	0x79, 0x5a, 0x55, 0x8c, 0x97, 0x6d, 0x6d, 0xfe, 0xe7, 0x14, 0xa2, 0x1b, 0x94, 0x95, 0xa8, 0x77,
	0xc8, 0xcd, 0xb5, 0xe0, 0x5b, 0x56, 0x92, 0x15, 0x40, 0x81, 0xb9, 0xa8, 0x93, 0x8a, 0x69, 0x43,
	0x83, 0x59, 0xb0, 0x78, 0xb1, 0xba, 0x58, 0xf6, 0x94, 0xe5, 0x4d, 0x53, 0xfb, 0xc2, 0xb4, 0x89,
	0xc3, 0xa2, 0x3f, 0x92, 0xf7, 0x00, 0x25, 0x72, 0x54, 0xa9, 0x61, 0x82, 0xd3, 0x93, 0x59, 0xb0,
	0x18, 0xc7, 0x7b, 0x0a, 0xf9, 0x08, 0x93, 0x02, 0xb7, 0xa9, 0xad, 0x4c, 0x22, 0x6d, 0xf6, 0x13,
	0x6b, 0x3a, 0x72, 0xdc, 0xc8, 0x73, 0x37, 0x36, 0xbb, 0xc5, 0x3a, 0x1e, 0x77, 0x7d, 0x1b, 0xd7,
	0x46, 0xee, 0xe0, 0x95, 0x7c, 0x4c, 0xb9, 0x11, 0xbb, 0x44, 0xdb, 0x8c, 0xa3, 0xd1, 0x6d, 0xac,
	0x67, 0xce, 0xfe, 0x76, 0xcf, 0xde, 0x76, 0x7d, 0x6b, 0x9b, 0x5c, 0x3e, 0x22, 0xff, 0xd3, 0x9a,
	0x20, 0xb9, 0xe0, 0x3f, 0xac, 0xc2, 0x3e, 0xc8, 0xe9, 0xb1, 0x20, 0x5d, 0x5f, 0x17, 0xe4, 0x03,
	0x4c, 0x7e, 0xa1, 0xd2, 0x4c, 0xf0, 0x84, 0xdb, 0x5d, 0x86, 0x8a, 0x3e, 0x77, 0xb7, 0x1c, 0x77,
	0xea, 0x9d, 0x13, 0xc9, 0x67, 0xb8, 0xd0, 0x56, 0x0a, 0x65, 0xb0, 0x48, 0x8c, 0x4a, 0xb9, 0x6e,
	0xce, 0x9a, 0x9e, 0xcd, 0x46, 0x8b, 0xc9, 0xea, 0xd2, 0x7f, 0xe4, 0xa1, 0xaf, 0x3d, 0xd4, 0x12,
	0x63, 0xd2, 0x7b, 0x06, 0x59, 0x93, 0x5b, 0xb8, 0xd4, 0x56, 0x76, 0xa8, 0xab, 0xcd, 0x3a, 0x51,
	0x58, 0x32, 0x6d, 0x54, 0xaa, 0xe8, 0xf9, 0xd3, 0x99, 0xc4, 0x7d, 0x29, 0x7e, 0x3d, 0x78, 0xae,
	0x36, 0xeb, 0x41, 0x26, 0xf7, 0xf0, 0xc6, 0xc3, 0xda, 0xe9, 0x7a, 0x5c, 0x78, 0x1c, 0xe7, 0x23,
	0xb8, 0xb1, 0x7b, 0xe0, 0x57, 0x98, 0x7a, 0xa0, 0x30, 0x8f, 0xa8, 0x3c, 0x50, 0x53, 0x98, 0x8d,
	0x8e, 0x11, 0xe9, 0x60, 0xbb, 0x6f, 0x5c, 0x43, 0x41, 0xcf, 0x7f, 0x07, 0x30, 0xbe, 0x76, 0xdb,
	0xdb, 0x2e, 0xe2, 0xea, 0xc0, 0x9b, 0x07, 0x87, 0xde, 0x7c, 0x0d, 0xa4, 0x18, 0x96, 0x38, 0xc9,
	0x9d, 0x59, 0xd3, 0x13, 0x97, 0x61, 0xba, 0xbf, 0xb8, 0xff, 0x2e, 0x7a, 0xfc, 0xb2, 0x78, 0xa2,
	0xe8, 0xf9, 0x3b, 0x08, 0xfd, 0x1d, 0x23, 0x18, 0x59, 0x55, 0xb9, 0x6f, 0x86, 0x71, 0x73, 0xfc,
	0x14, 0x7e, 0x3f, 0x33, 0x85, 0xfb, 0x75, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x38, 0xe2, 0xc2,
	0xd0, 0x69, 0x03, 0x00, 0x00,
}
